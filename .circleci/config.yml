version: 2

defaults: &defaults
  working_directory: ~/project/omg
  docker:
    - image: circleci/node:latest

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-omg-cli-{{ checksum "packages/omg-cli/package-lock.json" }}
            - v1-dependencies-omg-cli
      - restore_cache:
          keys:
            - v1-dependencies-omg-ui-{{ checksum "packages/omg-ui/package-lock.json" }}
            - v1-dependencies-omg-ui
      - run:
          name: Installing Lerna
          command: npm i
      - run:
          name: Install local dependencies
          command: npm run bootstrap
      - save_cache:
          key: v1-dependencies-omg-cli-{{ checksum "packages/omg-cli/package-lock.json" }}
          paths:
            - ~/.cache/yarn
            - packages/omg-cli/node_modules
      - save_cache:
          key: v1-dependencies-omg-ui-{{ checksum "packages/omg-ui/package-lock.json" }}
          paths:
            - ~/.cache/yarn
            - packages/omg-ui/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - omg

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: npm run lint

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Testing with coverage
          command: npm run coverage
      - run:
          name: Uploading to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - v1-dist-omg-cli-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-dist-omg-cli-
      - restore_cache:
          keys:
            - v1-dist-omg-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-dist-omg-ui-
      - run:
          name: Building
          command: npm run build
      - save_cache:
          key: v1-dist-omg-cli-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/omg-cli/dist
      - save_cache:
          key: v1-dist-omg-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/omg-ui/dist
      - persist_to_workspace:
          root: ~/project
          paths:
            - omg

  publish_latest:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Setup npm publish token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publishing to npmjs using lerna
          command: npm run publish

  publish_prerelease:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Setup npm publish token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publishing to npmjs using lerna
          command: npm run publish --dist-tag beta

workflows:
  version: 2

  release:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - publish_prerelease:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*-beta(\.[0-9]+)?/
            branches:
              ignore: /.*/
          requires:
            - build
      - publish_latest:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
          requires:
            - build
