version: 2

defaults: &defaults
  working_directory: ~/project/omg
  docker:
    - image: circleci/node:latest

jobs:
  # Install dependencies, restore/save them to cache, add them to the current workspace
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-omg-{{ checksum "packages/omg/yarn.lock" }}
            - v3-dependencies-omg
      - restore_cache:
          keys:
            - v3-dependencies-omg-ui-{{ checksum "packages/omg-ui/yarn.lock" }}
            - v3-dependencies-omg-ui
      - restore_cache:
          keys:
            - v3-dependencies-omg-validate-{{ checksum "packages/omg-validate/yarn.lock" }}
            - v3-dependencies-omg-validate
      - run:
          name: Installing Lerna
          command: yarn
      - run:
          name: Install local dependencies
          command: yarn bootstrap
      - save_cache:
          key: v3-dependencies-omg-{{ checksum "packages/omg/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - packages/omg/node_modules
      - save_cache:
          key: v3-dependencies-omg-ui-{{ checksum "packages/omg-ui/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - packages/omg-ui/node_modules
      - save_cache:
          key: v3-dependencies-omg-validate-{{ checksum "packages/omg-validate/yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - packages/omg-validate/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - omg

  # Lint all packages
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Linting
          command: yarn lint

  # Run tests on all packages
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Testing with coverage
          command: yarn coverage
      - run:
          name: Uploading to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  # Build all packages in production mode
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - v3-dist-omg-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-omg-
      - restore_cache:
          keys:
            - v3-dist-omg-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-omg-ui-
      - restore_cache:
          keys:
            - v3-dist-omg-validate-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-omg-validate-
      - run:
          name: Building
          command: yarn build
      - save_cache:
          key: v3-dist-omg-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/omg/dist
      - save_cache:
          key: v3-dist-omg-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/omg-ui/dist
      - save_cache:
          key: v3-dist-omg-ui-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/omg-validate/dist
      - persist_to_workspace:
          root: ~/project
          paths:
            - omg

  test-post-build:
    machine:
      image: circleci/classic:latest
      docker_layer_caching: true
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - v3-dist-omg-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-omg-
      - restore_cache:
          keys:
            - v3-dist-omg-validate-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v3-dist-omg-validate-
      - run:
          name: Install node and yarn
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && \
            nvm install node && \
            node -v && \
            sudo npm install -g yarn
      - run:
          name: Run test
          command: yarn test-post-build
      - save_cache:
          key: v3-test-post-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - tests
      - persist_to_workspace:
          root: ~/project
          paths:
            - omg

workflows:
  version: 2

  release:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - test-post-build:
          filters:
            tags:
              only: /.*/
          requires:
            - build
